{"version":3,"sources":["logo.png","verify/verifyForm.js","main/menuButton.js","main/main.js","hooks/useGeoLocation.js","services/map.js","services/ptop.js","services/food.js","main/navBar.js","App.js","reportWebVitals.js","serviceWorker.js","config/firebase.js","index.js"],"names":["VerifyForm","className","MenuButton","history","useHistory","redirect","e","props","preventDefault","push","ButtonGroup","color","aria-label","Button","onClick","Main","useState","orderObject","user","displayName","useGeoLocation","loaded","coordinates","lat","lng","location","setLocation","onSuccess","coords","latitude","longitude","onError","error","code","message","useEffect","navigator","geolocation","getCurrentPosition","MarkersMap","center","mapRef","createRef","MapContainer","zoom","TileLayer","url","attribution","Marker","position","console","log","alert","showMyLocation","useStyles","makeStyles","theme","root","padding","display","alignItems","input","marginLeft","spacing","flex","iconButton","divider","height","margin","Ptop","Food","list","width","fullList","signOut","firebase","auth","then","catch","AppBarMenu","classes","React","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","clsx","role","onKeyDown","Divider","List","ListItem","button","ListItemIcon","to","AppBar","Toolbar","IconButton","edge","aria-haspopup","Typography","variant","map","Fragment","Drawer","onClose","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","authResult","App","setuser","onAuthStateChanged","exact","path","render","component","PtoP","alt","src","logo","firebaseAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.eecdf428.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.cfa0f8ed.png\";","import react from \"react\";\r\n\r\nconst VerifyForm = () =>{\r\n  return(\r\n    <>\r\n    <div className=\"App\">\r\n      form asdfjlkajsdf\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default VerifyForm","import react from 'react';\r\nimport { Button,ButtonGroup} from '@material-ui/core';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst MenuButton = () => {\r\n  const history = useHistory()\r\nconst redirect=(e,props)=>\r\n{\r\n  e.preventDefault();\r\n  history.push(props);\r\n}\r\nreturn (\r\n<div>\r\n  <ButtonGroup color=\"secondary\" aria-label=\"outlined primary button group\">\r\n    <Button onClick={(e)=>{redirect(e,\"/p2p\")}}>\r\n      <MotorcycleIcon/> \r\n        <small>P2P</small>\r\n    </Button>\r\n    <Button onClick={(e)=>{redirect(e,\"/food\")}}>\r\n      <FastfoodIcon/> \r\n        <small>FOOD</small>\r\n    </Button>\r\n    <Button onClick={(e)=>{redirect(e,\"/\")}}>\r\n      <EventIcon/>\r\n        <small>Comming Soon..</small>\r\n    </Button>\r\n  </ButtonGroup>\r\n</div>\r\n)\r\n}\r\n\r\nexport default MenuButton","import React, { useEffect,useState }from 'react';\r\nimport VerifyForm from '../verify/verifyForm';\r\nimport MenuButton from './menuButton'\r\n\r\n\r\n\r\nconst Main = (props) =>{\r\n  var[orderObject,setOrderObject] = useState(true);\r\n  \r\n//  useEffect(()=>{\r\n \r\n//   var object=null\r\n//     firebase.database().ref('users/').orderByChild('userid').equalTo(props.user.uid)\r\n//                        .on('value',(snapshot)=>{\r\n//                 snapshot.forEach((childSnapshot) => {\r\n//        object = childSnapshot.val()\r\n//      //  console.log(childSnapshot.val())\r\n//      });\r\n//      object= snapshot.val();\r\n//    })\r\n//    console.log(object)\r\n//    if (object === null) {\r\n//      setOrderObject(\r\n//        true\r\n//      )\r\n   \r\n//    }\r\n//  },[])\r\n\r\n\r\n if(orderObject){\r\n    return(\r\n    <>\r\n      <div className=\"App\">\r\n       \r\n      <div> Welcome , {props.user.displayName}</div>\r\n       <div><MenuButton /></div>\r\n       <div>.</div>\r\n\r\n      </div>\r\n    </>\r\n    )\r\n  }\r\n  else{\r\n    return <VerifyForm />\r\n  }\r\n}\r\n\r\nexport default Main","import React, { useState, useEffect } from \"react\";\r\n\r\nconst useGeoLocation = () => {\r\n    const [location, setLocation] = useState({\r\n        loaded: false,\r\n        coordinates: { lat: \"\", lng: \"\" },\r\n    });\r\n\r\n    const onSuccess = (location) => {\r\n        setLocation({\r\n            loaded: true,\r\n            coordinates: {\r\n                lat: location.coords.latitude,\r\n                lng: location.coords.longitude,\r\n            },\r\n        });\r\n    };\r\n\r\n    const onError = (error) => {\r\n        setLocation({\r\n            loaded: true,\r\n            error: {\r\n                code: error.code,\r\n                message: error.message,\r\n            },\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n     \r\n        if (!(\"geolocation\" in navigator)) {\r\n            onError({\r\n                code: 0,\r\n                message: \"Geolocation not supported\",\r\n            });\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n    }, []);\r\n\r\n    return location;\r\n};\r\n\r\nexport default useGeoLocation;","import React, { useState, forwardRef,createRef } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport L, { map } from \"leaflet\";\r\n\r\nimport '../leaflet/leaflet.css';\r\n\r\nimport useGeoLocation from \"../hooks/useGeoLocation\";\r\n\r\n\r\n\r\n\r\nconst MarkersMap = () => {\r\n  const [center, setCenter] = useState({ lat: 13.4113, lng: 121.1808 });\r\n  const ZOOM_LEVEL = 14;\r\n  const mapRef = createRef();\r\n\r\n  const location = useGeoLocation();\r\n\r\n  const showMyLocation = () => {\r\n    if (location.loaded && !location.error) {\r\n      console.log(mapRef)\r\n      console.log(location)\r\n      // mapRef.current.leafletElement.flyTo(\r\n      //   [location.coordinates.lat, location.coordinates.lng],\r\n      //   ZOOM_LEVEL,\r\n      //   { animate: true }\r\n        \r\n      // );\r\n      \r\n      return false;\r\n    } else {\r\n      alert(location);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n     \r\n\r\n     \r\n\r\n      <div className=\"row\">\r\n        <div className=\"col text-center\">\r\n          <h2>React-leaflet - Get user location</h2>\r\n          <p>Get user location and highlight it with a marker</p>\r\n          <div className=\"col\">\r\n            <MapContainer center={center} zoom={ZOOM_LEVEL}  >\r\n              <TileLayer\r\n                url=\"https://api.maptiler.com/maps/basic/256/{z}/{x}/{y}.png?key=B7Qswco9rqEFCQ4fnonV\" \r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              />\r\n\r\n              {location.loaded && !location.error && (\r\n                <Marker\r\n                 \r\n                  position={[\r\n                    location.coordinates.lat,\r\n                    location.coordinates.lng,\r\n                  ]}\r\n\r\n                ></Marker>\r\n              )}\r\n            </MapContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row my-4\">\r\n        <div className=\"col d-flex justify-content-center\">\r\n          <button className=\"btn btn-primary\" onClick={(e) => {e.preventDefault()  \r\n            showMyLocation();\r\n            }}>\r\n            Locate Me\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row my-4\">\r\n        <div className=\"col d-flex justify-content-center\">\r\n          <button className=\"btn btn-primary\" >\r\n            Locate Me\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MarkersMap;","import React from 'react';\r\nimport { Button,ButtonGroup,IconButton,Divider,Paper,InputBase,MuiThemeProvider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport Map from './map';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    \r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\n\r\nconst Ptop = () =>{\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const redirect=(e,props)=>\r\n  {\r\n    e.preventDefault();\r\n    history.push(props);\r\n  }\r\n  return(\r\n    <>\r\n        <Button onClick={(e)=>{redirect(e,\"/\")}}>\r\n          <ArrowBackIcon/> \r\n            <small>BACK</small>\r\n        </Button>\r\n      <div className=\"p2p\">\r\n         Point to point Services\r\n      </div>\r\n      <div >\r\n  \r\n        <Map />\r\n     \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ptop","import React from 'react';\r\n\r\n\r\nconst Food = () =>{\r\n  return(\r\n    <div>\r\n      form Food\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Food","\r\nimport React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Typography ,Fab ,Button,Menu ,MenuItem } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Drawer } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nconst signOut = () =>{\r\n  firebase.auth().signOut().then(function() {\r\n    console.log('Successfully Signed out')\r\n  }).catch(function(){\r\n    console.log('error Signed out')\r\n  })\r\n}\r\n\r\nconst AppBarMenu = (props) =>{\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  \r\n\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n  \r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n\r\n      <Divider />\r\n        <List>\r\n        <ListItem button>\r\n              <ListItemIcon><HomeIcon /> </ListItemIcon>\r\n              <Link to=\"/\">Home</Link>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon><ExitToAppIcon /> </ListItemIcon>\r\n          <Link onClick={signOut}>Log Out</Link>\r\n        </ListItem>\r\n        </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return(\r\n  <>\r\n  <AppBar position=\"static\">\r\n    <Toolbar>\r\n      <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\" aria-haspopup=\"true\" onClick={toggleDrawer('left', true)}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" >\r\n        ORMOS\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>\r\n\r\n\r\n      {/* ///THIS IS WHERE THEY APPEAR */}\r\n  <div>\r\n    {['left'].map((anchor) => (\r\n      <React.Fragment key={'left'}>\r\n        <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\r\n          {list('left')}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    ))}\r\n  </div>  \r\n  </>\r\n\r\n  \r\n  )\r\n} \r\n\r\n\r\n\r\nexport default AppBarMenu","import React, { useEffect,useState }from 'react';\nimport logo from './logo.png';\nimport './App.css';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Main from './main/main';\nimport VerifyForm from './verify/verifyForm';\nimport PtoP from './services/ptop'\nimport Food from './services/food'\nimport NavBar from './main/navBar';\n\nvar uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n  callbacks:{\n    signInSuccessWithAuthResult : (authResult) =>{\n      // const userInfo = authResult.additionalUserInfo; \n      // if(userInfo.isNewUser && userInfo.providerid === 'password'){\n        \n      //   try{\n      //     authResult.user.sendEmailverification();\n      //   }\n      //   catch{\n\n      //   }\n      // }\n      return false;\n    }\n  }\n};\nconst App = () => {\n  \n  const [user,setuser]= useState(null);\n \n  useEffect(() => {\n    const authObserver = firebase.auth().onAuthStateChanged((user) =>{\n      setuser(user) \n    })\n    return authObserver;\n  })\n\nif(user){\n    return (\n      <>\n      <Router>\n      <NavBar />\n        <Route exact path=\"/\" render = {props => (\n          <React.Fragment>\n          <Main {...({user})}/>\n          </React.Fragment>\n        )} />\n          \n      <Route path=\"/verify\" component={VerifyForm}/>\n      <Route path=\"/p2p\" component={PtoP}/>\n      <Route path=\"/food\" component={Food}/>\n\n      </Router>\n      </>\n    )\n}\nelse{\n  return(\n    <>\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n         <img alt='mainLogo' src={logo} className={`App-logo`}/>\n        </div>\n        <div>Sign Up / Register</div>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={ firebase.auth()}/>\n      </header>\n      \n    </div>\n      \n    </>\n  )\n}\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from 'firebase';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCl7gGiwwOPR8rNmJSQ09Vp0lUPrOVkI3Q\",\r\n  authDomain: \"testing-49c7b.firebaseapp.com\",\r\n  databaseURL: \"https://testing-49c7b.firebaseio.com\",\r\n  projectId: \"testing-49c7b\",\r\n  storageBucket: \"testing-49c7b.appspot.com\",\r\n  messagingSenderId: \"610079685602\",\r\n  appId: \"1:610079685602:web:3bbb6d28808951f52917bb\",\r\n  measurementId: \"G-ZL0P2YX073\"\r\n}\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\nexport default fire","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport './config/firebase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\nreportWebVitals();\n"],"sourceRoot":""}